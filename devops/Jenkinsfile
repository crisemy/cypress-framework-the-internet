pipeline {
  agent {
    docker {
      image 'cypress/browsers:node-18.16.1-chrome-114.0.5735.133-1-ff-114.0.2-edge-114.0.1823.51-1'
      args '-u root:root --privileged' // agrega docker.sock si lo necesitás
    }
  }

  environment {
    CYPRESS_CACHE_FOLDER = "${WORKSPACE}/.cypress_cache"
    npm_config_cache = "${WORKSPACE}/.npm_cache"
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
        sh 'ls -la'
        sh 'git rev-parse --is-inside-work-tree || echo "⚠️ No es un repo Git"'
      }
    }

    stage('Install dependencies') {
      steps {
        sh 'mkdir -p "$npm_config_cache"'
        sh 'mkdir -p "$CYPRESS_CACHE_FOLDER"'
        sh 'npm ci'
      }
    }

    stage('Run Cypress Tests') {
      steps {
        sh '''
          npx cypress run \
            --reporter mochawesome \
            --reporter-options reportDir=cypress/reports/mochawesome,overwrite=false,html=true,json=true
        '''
      }
    }

    stage('Archive Artifacts') {
      steps {
        archiveArtifacts artifacts: 'cypress/reports/mochawesome/*.json', allowEmptyArchive: true
      }
    }

    stage('Publish Report') {
      steps {
        publishHTML(target: [
          allowMissing: true,
          alwaysLinkToLastBuild: true,
          keepAll: true,
          reportDir: 'cypress/reports/mochawesome',
          reportFiles: 'mochawesome.html',
          reportName: 'Mochawesome Report'
        ])
      }
    }
  }

  post {
    always { echo "✅ Pipeline finalizado (éxito o falla)" }
    failure { echo "❌ Build FALLÓ" }
  }
}
