pipeline {
    agent {
        docker {
            image 'cypress/browsers:node18.12.0-chrome107-ff106'
            args '-u root:root'
        }
    }

    environment {
        CYPRESS_CACHE_FOLDER = "${WORKSPACE}/.cypress_cache"
        npm_config_cache = "${WORKSPACE}/.npm_cache"
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    echo "=== DEBUG: Clonando repo manualmente ==="
                    git url: 'https://github.com/crisemy/cypress-framework-the-internet.git', branch: 'main'
                    sh 'ls -la'
                    sh 'git rev-parse --is-inside-work-tree || echo NO ES UN REPO GIT'
                }
            }
        }

        stage('Install dependencies') {
            steps {
                sh 'mkdir -p $npm_config_cache'
                sh 'mkdir -p $CYPRESS_CACHE_FOLDER'
                sh 'npm ci'
            }
        }

        stage('Run Cypress Tests') {
            steps {
                sh '''
                    npx cypress run \
                      --reporter mochawesome \
                      --reporter-options reportDir=cypress/reports/mochawesome,overwrite=false,html=true,json=true
                '''
            }
        }

        stage('Archive Artifacts') {
            steps {
                archiveArtifacts artifacts: 'cypress/reports/mochawesome/*.json', allowEmptyArchive: true
            }
        }

        stage('Publish Report') {
            steps {
                publishHTML(target: [
                    allowMissing: true,
                    alwaysLinkToLastBuild: true,
                    keepAll: true,
                    reportDir: 'cypress/reports/mochawesome',
                    reportFiles: 'mochawesome.html',
                    reportName: 'Mochawesome Report'
                ])
            }
        }
    }

    post {
        always {
            echo "Pipeline completed (success or fail)"
        }
        failure {
            echo "‚ùå Build FAILED"
        }
    }
}
